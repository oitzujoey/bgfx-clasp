(in-package :bgfx)

(defgeneric render-frame (msecs) (:method ((msecs |int32_t|)) (|renderFrame(int32_t)| msecs)))
(defgeneric set-view-clear-rgba (id flags rgba depth stencil)
  (:method ((id |ViewId|) (flags |uint16_t|) (rgba |uint32_t|) (depth |float|) (stencil |uint8_t|))
    (|setViewClear(ViewId,uint16_t,uint32_t,float,uint8_t)| id flags rgba depth stencil)))
(defgeneric init (init)
  (:method ((init |Init|)) (|init(Init&)| init)))
(defgeneric set-view-rect-ratio (id x y ratio)
  (:method ((id |ViewId|) (x |uint16_t|) (y |uint16_t|) (ratio |BackbufferRatio::Enum|))
    (|setViewRect(ViewId,uint16_t,uint16_t,BackbufferRatio::Enum)| id x y ratio)))
(defgeneric reset (width height flags format)
  (:method ((width |uint32_t|) (height |uint32_t|) (flags |uint32_t|) (format |TextureFormat::Enum|))
    (|reset(uint32_t,uint32_t,uint32_t,TextureFormat::Enum)| width height flags format)))
(defgeneric touch (id) (:method ((id |ViewId|)) (|touch(ViewId)| id)))
(defgeneric dbg-text-clear (attr small)
  (:method ((attr |uint8_t|) (small |bool|)) (|dbgTextClear(uint8_t,bool)| attr small)))
(defgeneric dbg-text-image (x y width height data pitch)
  (:method
      ((x |uint16_t|) (y |uint16_t|) (width |uint16_t|) (height |uint16_t|) (data |const void*|) (pitch |uint16_t|))
    (|dbgTextImage(uint16_t,uint16_t,_width,uint16_t,const void*,uint16_t)| x y width height data pitch)))
;; This function is unsafe because the C++ function accepts a variable number of arguments and I'm doing no input
;; sanitation.
(defgeneric dbg-text-printf (x y attr format)
  (:method ((x |uint16_t|) (y |uint16_t|) (attr |uint8_t|) (format |const char*|))
    (|dbgTextPrintf(uint16_t,uint16_t,uint8_t,const char*,...)| x y attr format)))
(defgeneric set-debug (debug) (:method ((debug |uint32_t|)) (|setDebug(uint32_t)| debug)))
(defgeneric frame (capture) (:method ((capture |bool|)) (|frame(bool)| capture)))
(defun shutdown () (|shutdown|))
